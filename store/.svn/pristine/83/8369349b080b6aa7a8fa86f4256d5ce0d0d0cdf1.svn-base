package cn.tedu.store.service.Impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import cn.tedu.store.entity.Address;
import cn.tedu.store.entity.Order;
import cn.tedu.store.entity.OrderItem;
import cn.tedu.store.mapper.OrderMapper;
import cn.tedu.store.service.IAddressService;
import cn.tedu.store.service.ICartService;
import cn.tedu.store.service.IOrderService;
import cn.tedu.store.service.ex.InsertException;
import cn.tedu.store.vo.CartVO;
@Service
public class OrderServiceImpl implements IOrderService {
	@Autowired
	private OrderMapper orderMapper;
	@Autowired
	private IAddressService addressService;
	@Autowired
	private ICartService cartService;
	private void insertOrder(Order order){
		Integer rows =  orderMapper.insertOrder(order);
		if(rows!=1){
			throw new InsertException("创建订单失败!插入订单数据出现未知错误!");
		}
	}
	
	private void insertOrderItem(OrderItem orderItem){
		Integer rows =  orderMapper.insertOrderItem(orderItem);
		if(rows!=1){
			throw new InsertException("创建订单失败!插入订单数据出现未知错误!");
		}
	}
	@Override
	@Transactional
	public Order create(Integer aid, Integer[] cids, Integer uid, String username) {
		// 创建当前时间对象
		Date now = new Date();
	    // 根据参数cids，通过cartService的getByCids()查询购物车数据，得到List<CartVO>类型的对象
		List<CartVO> list = cartService.getByCids(cids, uid);
	    // 遍历以上购物车数据集合对象以计算总价
		Long totalPrice = 0L;
		for (CartVO cart : list) {
			totalPrice += cart.getRealPrice()*cart.getNum();
		}
		list.stream().mapToLong(i->i.getRealPrice() * i.getNum()).sum();
		
		//创建order对象
		Order order = new Order();
		
		order.setUid(uid);
		//根据参数aid，通过addressService的getByAid()查询收货地址数据
		Address address = addressService.getByAid(aid);
		//补全order所有属性
		order.setRecvName(address.getName());
		order.setRecvPhone(address.getPhone());
		order.setRecvProvince(address.getProvinceName());
		order.setRecvCity(address.getCityName());
		order.setRecvArea(address.getAreaName());
		order.setRecvAddress(address.getAddress());
		order.setTotalPrice(totalPrice);
		order.setStatus(0);
		order.setOrderTime(now);
		order.setPayTime(null);
		order.setCreatedUser(username);
		order.setCreatedTime(now);
		order.setModifiedUser(username);
		order.setModifiedTime(now);
		//插入订单数据
		insertOrder(order);
		
		// 遍历购物车数据集合对象
		for (CartVO cart : list) {
			// -- 创建OrderItem对象
			OrderItem orderItem = new OrderItem();
			//补全orderItem所有属性
			orderItem.setOid(order.getOid());
			orderItem.setPid(cart.getPid());
			orderItem.setTitle(cart.getTitle());
			orderItem.setImage(cart.getImage());
			orderItem.setPrice(cart.getRealPrice());
			orderItem.setNum(cart.getNum());
			orderItem.setCreatedUser(username);
			orderItem.setCreatedTime(now);
			orderItem.setModifiedUser(username);
			orderItem.setModifiedTime(now);
			//插入订单商品数据
			insertOrderItem(orderItem);
		}
	    
		return order;
	}

}
